About
================

PackageMaker is a tool to automate process to package files, dirs and symlinks.

It helps building packages of existing files on your system by automating
almost all of the steps needed for packaing: arrange source tree, create
makefiles and rpm specs or debina packaging files, etc.


It will try gathering the information of files, dirs and symlinks in given path
list, and then:

1. arrange src tree contains these files, dirs and symlinks with these
   relative path kept, and build files (Makefile.am, configure.ac, etc.)
   to install these.

2. generate packaging metadata like RPM SPEC, debian/rules, etc.

3. build package such as rpm, src.rpm, deb, etc.


NOTE: The permissions of the files might be lost during packaging process. If
you want to ensure these are saved or force set permissions as you wanted,
specify these explicitly in Makefile.am or rpm spec, etc.


How to build
================


Build w/ mock
------------------------

It takes some time to make a rpm but should be better, I think.

1. python setup.py srpm
2. mock -r <target_build_dist> dist/SRPMS/packagemaker-*.src.rpm


Build w/o mock
------------------------

It's easier than the above but only possible to make a rpm for build host.

1. python setup.py rpm



How to test
================

* Unit tests: `python setup.py test`
* Unit tests + System tests: `python setup.py test --full`



TODO
================

* correct wrong English expressions
* refactor its architecture:

  * central configuration management:

    * package metadata passed thru JSON/YAML/XML data

  * central object registration system
  * plugin system: stabilize the API of the plugin system
  * make collector (generator) and packagemaker classes loosely-coupled
  * separate packaging strategy (PackageMaker._scheme) and packaging format
    (PackageMaker._format)

* define schema for input (JSON, YAML?, XML?, ...)

  * support VirtualFileInfo (or whatever) model: its content is embedded in
    JSON data and will be generated on demand.
  * and more, perhasp, its content will be gotten from external site pointed by
    URL reference in JSON data

* more complete tests
* sort out command line options: Work in progress
* eliminate the strong dependency to rpm and make it runnable on debian based
  systems (w/o rpm-python)
* find causes of warnings during deb build and fix them all
* keep permissions of targets in tar archives


References
================

In random order:

* http://docs.fedoraproject.org/en-US/Fedora_Draft_Documentation/0.1/html/RPM_Guide/ch-creating-rpms.html
* http://docs.fedoraproject.org/en-US/Fedora_Draft_Documentation/0.1/html/RPM_Guide/ch-rpm-programming-python.html
* http://cdbs-doc.duckcorp.org
* https://wiki.duckcorp.org/DebianPackagingTutorial/CDBS
* http://kitenet.net/~joey/talks/debhelper/debhelper-slides.pdf
* http://wiki.debian.org/IntroDebianPackaging
* http://www.debian.org/doc/maint-guide/ch-dother.ja.html


Alternatives
================

Basic idea and implementation design of PackageMaker was arised from offhand
talk with my very talented co-worker, Masatake Yamato (yamato at redhat.com).

Around the same time I started working on PackageMaker, Magnus-san developed
buildrpm and I was very impressed with it. Implementation was completely
different but PackageMaker and buildrpm do the same thing basically.

I believe PackageMaker is useful and helps you but if you want features
PackageMaker lacks or will not have or you don't like it, take a look at
buildrpm:

* buildrpm: http://magnusg.fedorapeople.org/buildrpm/


License
================

Copyright (C) 2011 Satoru SATOH <satoru.satoh @ gmail.com>
Copyright (C) 2011 Satoru SATOH <ssato @ redhat.com>

This program is free software: you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation, either version 3 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program.  If not, see <http://www.gnu.org/licenses/>.



Author
================

Satoru SATOH <ssato at redhat.com>

